#####
# Decluttering templates
# https://github.com/custom-cards/decluttering-card
#####

header:
  card:
    style: >
      ha-card {
        height: 100%;
        background: none;
        font-family: var(--paper-ha-card_-_font-family);
        font-weight: 700;
        font-size: 3em;
        line-height: 1em;
        color: var(--el-title-color);
        margin-left: -15px;
      }
    type: markdown
    content: |
      [[content]]
  default: null

subheader:
  card:
    style: >
      ha-card {
        height: 100%;
        background: none;
        font-family: var(--paper-ha-card_-_font-family);
        font-weight: 700;
        font-size: 2em;
        line-height: 1em;
        color: var(--el-title-color);
        margin-left: -15px;
        margin-top: -20px;
        margin-bottom: -20px;
      }
    type: markdown
    content: |
      [[content]]
  default: null

title:
  card:
    style: >
      ha-card {
        height: 100%;
        background: none;
        font-family: var(--paper-ha-card_-_font-family);
        font-weight: 700;
        font-size: 24px;
        color: var([[color]]);
        margin-left: -15px;
        margin-top: -20px;
        margin-bottom: -15px;
      }
    type: markdown
    content: |
      [[content]]
  default:
    - color: --el-title-color

subtitle:
  card:
    style: >
      ha-card {
        height: 100%;
        background: none;
        font-family: var(--paper-ha-card_-_font-family);
        font-weight: 600;
        font-size: 17px;
        color: var(--[[color]]);
        margin-left: -15px;
        margin-top: -25px;
        margin-bottom: -15px;
      }
    type: markdown
    content: |
      [[content]]
  default:
    - color: --el-title-color

device:
  card:
    style: >
      ha-card {
        height: 100%;
        background: none;
        font-weight: 700;
        font-size: 13px;
        color: var(--el-title-color);
        text-align: center;
        position: static;
        margin-top: -20px;
        margin-bottom: -25px;
      }
    type: markdown
    content: |
      [[content]]
  default: null

#---------------------#
# Entity state cards
#---------------------#
es-icon:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: false
    show_name: false
    styles: !include ../styles/style-icon.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

# Navigation card
path:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: navigate
      navigation_path: "[[navigation_path]]"
    show_icon: false
    show_state: false
    styles: !include ../styles/style-card-path.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

# Navigation card for divisions
path-division:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: navigate
      navigation_path: "[[navigation_path]]"
    show_icon: false
    show_state: false
    state: !include ../states/state-path-division.yaml
    styles: !include ../styles/style-card-path-division.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - rows-on: 1.2fr min-content min-content
    - rows-off: 1.5fr 1fr

# Navigation card for car
path-car:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: navigate
      navigation_path: "[[navigation_path]]"
    show_icon: false
    show_state: false
    state: !include ../states/state-car-lock.yaml
    styles: !include ../styles/style-card-path-car.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

scene:
  card:
    entity: "[[scene-1]]"
    name: "[[[ return entity.attributes.friendly_name ]]]"
    tap_action:
      action: call-service
      service: scene.turn_on
      service_data:
        entity_id: "[[scene-1]]"
    show_icon: false
    show_state: false
    state: !include ../states/state-scene.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

script:
  card:
    entity: "[[script]]"
    name: "[[name]]"
    tap_action:
      action: call-service
      service: script.turn_on
      service_data:
        entity_id: "[[script]]"
    show_icon: false
    show_state: false
    state: !include ../states/state-script.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

script-button:
  card:
    entity: "[[script]]"
    tap_action:
      action: call-service
      service: script.turn_on
      service_data:
        entity_id: "[[script]]"
    show_icon: false
    show_name: false
    show_state: false
    state: !include ../states/state-script.yaml
    styles: !include ../styles/style-card-path-button.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

es:
  card:
    custom_fields: !include ../circles/circle-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

es-scene:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: call-service
      service: scene.turn_on
      service_data:
        entity_id: "[[scene-1]]"
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

es-script:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: call-service
      service: script.turn_on
      service_data:
        entity_id: "[[script-1]]"
    show_icon: false
    show_state: true
    state: !include ../states/state-es-script.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

# Shows the state of an input boolean entity
es-boolean:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"

# Shows if a person is at home or not
es-person:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: true
    tap_action:
      action: none
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-person.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --green-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"

es-config:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: false
    tap_action:
      action: "[[action]]"
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-small.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - action: toggle
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"

es-dummy:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: true
    tap_action:
      action: none
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"

es-light:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es-lights.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --yellow-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: entity.attributes.brightness
    - info-max: (254 / 100)
    - info-unit: "%"
    - info-state: "on"

# Lights which only support white range of values as Tasmota. Changes in hold action.
es-light-tasmota:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es-lights-tasmota.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --yellow-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: entity.attributes.brightness
    - info-max: (254 / 100)
    - info-unit: "%"
    - info-state: "on"

# Lights which only support color temperatures
es-light-temperature:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es-lights-temperature.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --yellow-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: entity.attributes.brightness
    - info-max: (254 / 100)
    - info-unit: "%"
    - info-state: "on"

# Lights which toggle based on a switch and colors are controlled from another entity
es-light-switch:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity-switch]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es-lights-temperature.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --yellow-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: entity.attributes.brightness
    - info-max: (254 / 100)
    - info-unit: "%"
    - info-state: "on"

# Lights which toggle based on a switch and colors are controlled from another entity.
# Hold action controls each individual light connected to switch
es-light-switch-2:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity-switch]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es-lights-2.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --yellow-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: entity.attributes.brightness
    - info-max: (254 / 100)
    - info-unit: "%"
    - info-state: "on"

# Lights with a slider
es-light-slider:
  card:
    custom_fields: !include ../cards/card-light-slider.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    #hold_action: !include ../holds/hold-action-es-lights.yaml
    tap_action:
      action: toggle
    show_icon: false
    show_state: false
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-slider.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"

# Wall plug devices
es-switch:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
    variables:
      power_entity: "[[entity-power]]"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: false
    - info-max: 1
    - info-unit: "W"
    - info-state: "on"

es-switch-confirmation:
  card:
    custom_fields: !include ../circles/pill-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: toggle
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
    confirmation:
      text: "[[confirmation-text]]"
    variables:
      power_entity: "[[entity-power]]"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - info-attribute: false
    - info-max: 1
    - info-unit: "W"
    - info-state: "on"

# Devices state obtained with ping integration
es-ping:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: none
    show_icon: false
    show_state: false
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --green-tint, var(--ha-card-background-es-on)
    - background-default: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"

# Covers
es-cover:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    hold_action: !include ../holds/hold-action-es-cover.yaml
    tap_action:
      action: call-service
      service: "[[toggle-script]]"
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "open"
    - state-2: "closed"
    - state-3: "closing"
    - info-attribute: entity.attributes.current_position
    - info-max: 1
    - info-unit: "%"
    - info-state: "open"

es-speaker:
  card:
    custom_fields: !include ../circles/circle-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action: !include ../holds/hold-action-es-speaker.yaml
    show_icon: false
    show_state: true
    state: !include ../states/state-es-speaker.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

es-tv:
  card:
    #custom_fields: !include ../circles/circle-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action: !include ../holds/hold-action-es-tv.yaml
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --purple-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - state-1: "on"
    - state-2: "off"
    - state-4: "unavailable"

es-camera:
  card:
    #custom_fields: !include ../circles/circle-x.yaml
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: more-info
    show_icon: false
    show_state: true
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --ha-card-background-es-on
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off

    - state-1: detected
    - state-2: idle
    - state-3: recording

es-mood:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: call-service
      service: input_select.select_option
      service_data:
        entity_id: "[[entity]]"
        option: "[[option]]"
    show_icon: false
    show_state: false
    state: !include ../states/state-mood.yaml
    styles: !include ../styles/style-card-centered-outline.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

es-number:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: none
    show_icon: false
    show_state: true
    styles: !include ../styles/style-card-number.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

#---------------------#
# Sensor cards
#---------------------#
sensor-pill:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    icon: "[[icon]]"
    show_icon: true
    show_state: true
    show_name: false
    numeric_precision: "[[numeric_precision]]"
    tap_action:
      action: none
    state: !include ../states/state-x.yaml
    styles: !include ../styles/style-card-sensor.yaml
    #template: "[[template]]"
    type: "custom:button-card"
  default:
    - background-on: --ha-card-background-es-on
    - background-default: --orange-tint, var(--ha-card-background-es-on)
    - color-name-on: --ha-card-color-name-on
    - color-name-off: --ha-card-color-name-off
    - color-state-on: --ha-card-color-state-on
    - color-state-off: --ha-card-color-state-off
    - numeric_precision: 1
    - state-1: "on"
    - state-2: "off"

# sensor-kitchen:
#   card:
#     entity: "[[entity]]"
#     name: "[[name]]"
#     show_icon: false
#     show_state: false
#     tap_action:
#       action: none
#     styles: !include ../styles/style-card-sensors.yaml
#     template: "[[template]]"
#     type: "custom:button-card"
#   default: null

# sensor-living_room:
#   card:
#     entity: "[[entity]]"
#     name: "[[name]]"
#     show_icon: false
#     show_state: false
#     tap_action:
#       action: none
#     styles: !include ../styles/style-card-sensors-small.yaml
#     template: "[[template]]"
#     type: "custom:button-card"
#   default: null

sensor-energy:
  card:
    name: "[[name]]"
    show_icon: false
    show_state: false
    tap_action:
      action: none
    styles: !include ../styles/style-card-energy.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

sensor-number:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: true
    show_units: "[[show_units]]"
    styles: !include ../styles/style-card-number.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default:
    - show_units: true

sensor-number-ext:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: url
      url_path: "[[url-1]]"
    show_icon: false
    show_state: true
    styles: !include ../styles/style-card-number.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

sensor-number-local:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action:
      action: navigate
      navigation_path: "[[url-1]]"
    show_icon: false
    show_state: true
    styles: !include ../styles/style-card-number.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

#---------------------#
# Radio cards
#---------------------#

radio:
  card:
    name: "[[radio]]"
    tap_action:
      action: call-service
      service: script.radio_set
      service_data:
        chromecast_radio_option: "[[room]]"
        radio_station_option: "[[radio]]"
    show_icon: false
    show_state: false
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

#---------------------#
# Buttons
#---------------------#

btn-script:
  card:
    name: "[[text]]"
    tap_action:
      action: call-service
      service: script.turn_on
      service_data:
        entity_id: "[[script]]"
    show_icon: false
    show_state: false
    styles: !include ../styles/style-btn-large.yaml
    #template: "[[template]]"
    type: "custom:button-card"
  default: null

btn-icon-text:
  card:
    type: "custom:button-card"
    entity: "[[entity]]"
    icon: "mdi:[[icon]]"
    name: "[[name]]"
    tap_action: "[[tap_action]]"
    styles: !include ../styles/style-btn-icon.yaml

btn-moods:
  card:
    entity: "[[entity]]"
    name: "[[name]]"
    tap_action: !include ../holds/hold-action-mood.yaml
    show_icon: false
    show_state: true
    state: !include ../states/state-es-script.yaml
    styles: !include ../styles/style-card-centered.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

#---------------------#
# Script triggers
#---------------------#

script-mood-outline:
  card:
    entity: "[[script]]"
    name: "[[name]]"
    tap_action:
      action: call-service
      service: script.turn_on
      service_data:
        entity_id: "[[script]]"
    show_icon: false
    show_state: false
    styles: !include ../styles/style-card-centered-outline.yaml
    template: "[[template]]"
    type: "custom:button-card"
  default: null

#---------------------#
# Map
#---------------------#
map-card:
  card:
    type: custom:vertical-stack-in-card
    cards:
      - type: markdown
        content: "Quilómetros"
        style: |
          ha-card.type-markdown {
            background: transparent;
            height: 0px;
          }
          ha-markdown.no-header {
            bottom: -80px;
            color: var(--el-text-color);
            font-size: 12px;
            font-weight: bold;
            left: 0px;
            padding-left: 10px !important;
            padding-top: 0px !important;
            position: absolute;
            z-index: 1;
          }
      - type: markdown
        content: |
          {{ states.sensor.my_id_odometer.state }} KMs
        style: |
          ha-card.type-markdown {
            background: transparent;
            height: 0px;
          }
          ha-markdown.no-header {
            bottom: -96px;
            color: var(--el-text-color);
            font-size: 12px;
            left: 0px;
            padding-left: 10px !important;
            padding-top: 0px !important;
            position: absolute;
            z-index: 1;
          }
      - type: picture-entity
        entity: camera.vw_ev_location
        show_name: false
        show_state: false
        tap_action:
          action: none
        style: |
          ha-card {
            border-radius: 0px;
            margin-bottom: -20px;
            margin-top: -5x;
          }
          img {
            position: relative;
          }
          .type-picture-entity:after {
            background: linear-gradient(to bottom, var(--map-gradient-end) 5px, rgba(0, 0, 0, 0) 15%),
                        linear-gradient(to right, var(--map-gradient-end) 5px, rgba(0, 0, 0, 0) 40%),
                        linear-gradient(to left, var(--map-gradient-end) 0px, rgba(0, 0, 0, 0) 15%),
                        linear-gradient(to top, var(--map-gradient-end) 15px, rgba(0, 0, 0, 0) 20%);
            content: '';
            height: 100%;
            left:0;
            position: absolute;
            top: 0;
            width: 100%;
          }

#---------------------#
# Climate
#---------------------#

climate-vw:
  card:
    type: custom:vertical-stack-in-card
    cards:
      - type: "custom:button-card"
        entity: "[[entity-climate-state]]"
        name: "[[name]]"
        show_icon: false
        show_state: true
        tap_action:
          action: none
        styles: !include ../styles/style-card-climate.yaml
        template: "[[template]]"
        variables:
          current_temp: >
            [[[
              if(states['[[entity-climate-current]]'].state == 'unavailable') { return -1 }
              else { return `${states['[[entity-climate-current]]'].state}`; }
            ]]]
          target_temp: >
            [[[
              if(states['[[entity-climate-target]]'].state == 'unavailable') { return -1 }
              else { return `${states['[[entity-climate-target]]'].state}`; }
            ]]]
          state: >
            [[[
              return entity.state;
            ]]]
          state_on: "active"

      - type: custom:mod-card
        card_mod:
          style: |
            ha-card {
              {% if (is_state('sensor.my_id_climatisation_state','on')) %}  
              background: var(--ha-card-color-name-on);
              {% else %}
              background: var(--ha-card-background-climate-control);
              {% endif %}
              border-radius: 180px !important;
              padding: 4px;              
              --horizontal-stack-card-margin: 0px;
            }
        card:
          type: horizontal-stack
          cards:
            - type: "custom:button-card"
              aspect_ratio: 1/1
              icon: mdi:minus
              color: var(--el-text-color-light)
              styles:
                card:
                  - background: var(--ha-card-background-es-static)
                  - border-radius: 50%
              tap_action:
                action: call-service
                service: input_number.decrement
                service_data:
                  entity_id: "[[entity-climate-target]]"
            - type: "custom:button-card"
              aspect_ratio: 1/1
              icon: mdi:play
              color: var(--el-es-static-text)
              styles:
                card:
                  - background: transparent
              tap_action:
                action: call-service
                service: input_number.increment
                service_data:
                  entity_id: "[[service-set-target]]"
            - type: "custom:button-card"
              aspect_ratio: 1/1
              icon: mdi:plus
              color: var(--el-text-color-light)
              styles:
                card:
                  - background: var(--ha-card-background-es-static)
                  - border-radius: 50%
              tap_action:
                action: call-service
                service: input_number.increment
                service_data:
                  entity_id: "[[entity-climate-target]]"
    default: null
    style: |
      ha-card {
        {% if (is_state('sensor.my_id_climatisation_state','on')) %}  
        background: var(--ha-card-background-es-on);
        {% else %}
        background: var(--ha-card-background-es-off);
        {% endif %}
        height: 165px;
        width: 165px;
      }
      ha-card > div {
        display: inline-flex;
        flex-direction: column;
        height: calc(100% - 20px);
        justify-content: space-between;
        padding: 10px;
        width: calc(100% - 20px);
      }

#---------------------#
# Cars
#---------------------#

car-state:
  default: null
  card:
    type: custom:vertical-stack-in-card
    style: |
      ha-card.type-custom-vertical-stack-in-card {
        background: transparent;
      }
      layout-card {
        background: var(--ha-card-background-es-static);
        border-radius: var(--ha-card-border-radius);
        display: block;
        padding-top: 30px;
      }
    cards:
      - type: picture
        image: /local/images/cars/side.png
        style: |
          ha-card.type-picture {
            background: transparent;
            min-height: 160px;
          }
      - type: markdown
        content: |
          {% set timestamp_1 = states.binary_sensor.my_id_car_is_active.last_changed %}
          {% set timestamp_2 = states.sensor.my_id_state_of_charge.last_changed %}
          {% if timestamp_1 > timestamp_2 %}
          Atualizado à {{ (as_timestamp(now()) - as_timestamp(timestamp_1)) | timestamp_custom("%-Hh e %Mmin", false) }}
          {% else %}
          Atualizado à {{ (as_timestamp(now()) - as_timestamp(timestamp_2)) | timestamp_custom("%-Hh e %Mmin", false) }}
          {% endif %}
        style: |
          ha-card.type-markdown {
            background: transparent;
            margin-bottom: -45px;
          }
          ha-markdown.no-header {
            color: var(--el-text-color-light);
            font-size: 10px;
            margin-top: -35px;
            padding-bottom: 0px;
            padding-top: 0px !important;
            text-align: center;
          }

      - type: custom:state-switch
        entity: sensor.my_id_door_lock_status
        default: default
        states:
          unlocked:
            type: markdown
            content: |
              <ha-icon icon="mdi:lock-open-alert-outline"></ha-icon> Aberto
            style: |
              ha-card.type-markdown {
                background: transparent;
                display: flex;
                justify-content: center;
                margin-bottom: -45px;
                width: 100%;
                --mdc-icon-size: 12px;
              }
              ha-markdown.no-header {
                background-color: var(--ha-card-background-es-off);
                border-radius: 40px;
                color: var(--el-text-color);
                font-size: 12px;
                font-weight: bold;
                height: 18px;
                margin-top: -45px;
                padding-bottom: 10px;
                padding-left: 16px;
                padding-top: 10px !important;
                padding-right: 16px;
              }

      - type: custom:layout-card
        layout_type: custom:horizontal-layout
        layout:
          column_widths: min-content 1fr
          max_width: 350
          width: 150
        cards:
          - type: "custom:button-card"
            entity: "[[entity_range]]"
            show_name: false
            show_icon: false
            show_state: false
            tap_action:
              action: none
            styles:
              card:
                - background: transparent
                - border-radius: 0
                - height: 46px
                - padding: 0
              custom_fields:
                number:
                  - align-self: end
                  - color: var(--el-text-color)
                  - font-size: 32px
                  - font-weight: bold
                  - line-height: 26px
                  - margin-right: 4px
                label:
                  - align-self: end
                  - color: var(--el-text-color-light)
                  - font-size: 12px
                  - font-weight: bold
                  - margin-right: 8px
              grid:
                - grid-template-areas: '"number label"'
                - grid-template-columns: min-content min-content
                - text-align: left
            template: sensors-car-range

          - type: vertical-stack
            view_layout:
              column: 2
            cards:
              - type: "custom:bar-card"
                entities:
                  - entity: "[[entity-battery]]"
                target: 20
                height: 35px
                icon: mdi:lightning-bolt
                positions:
                  icon: "inside"
                  indicator: "off"
                  minmax: "off"
                  name: "off"
                  value: inside
                style: |-
                  ha-card.type-custom-bar-card {
                    background: transparent;
                  }
                  .card-content {
                    padding-bottom: 0px;
                    padding-left: 5px;
                    padding-right: 4px;
                  }
                  bar-card-card {
                    --bar-card-border-radius: 6px;
                    --mdc-icon-size: 18px;
                  }
                  bar-card-backgroundbar {
                    background: var(--ha-card-bar-background);
                    filter: none;
                    opacity: 1;
                  }
                  bar-card-iconbar {
                    color: white;
                  }
                  bar-card-currentbar {
                    --bar-card-color: rgb(93, 167, 98);
                  }
                  .value-direction-right {
                    color: var(--el-text-color);
                    font-weight: bold;
                  }
              - type: markdown
                content: |
                  {% if not(is_state('sensor.my_id_remaining_charging_time', '0')) %}
                  {% set ct = states('sensor.my_id_remaining_charging_time') | int %}
                    {% if ct > 60 %}{{ ct // 60 }}:{{ '{:0>2d}'.format(ct%60) }}min{% else %}{{ct}}min{% endif %} restantes
                  {% endif %}
                style: |
                  ha-card.type-markdown {
                    background: transparent;
                  }
                  ha-markdown.no-header {
                    color: var(--el-text-color-light);
                    font-size: 11px;
                    font-weight: bold;
                    margin-top: -6px;
                    padding-bottom: 0px;
                    padding-top: 0px !important;
                    text-align: center;
                  }

car-odometer:
  default: null
  card:
    type: "custom:button-card"
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: true
    tap_action:
      action: none
    styles: !include ../styles/style-card-car-pill.yaml
    template: "[[template]]"

car-tires:
  card:
    type: "custom:button-card"
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: false
    tap_action:
      action: none
    styles: !include ../styles/style-card-car-info.yaml
    template: "[[template]]"
  default: null

car-stats:
  card:
    type: "custom:button-card"
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: false
    tap_action:
      action: none
    state: !include ../states/state-car-charge.yaml
    styles: !include ../styles/style-card-car-info.yaml
    template: "[[template]]"
  default: null

car-charge-stats:
  card:
    type: "custom:button-card"
    entity: "[[entity]]"
    name: "[[name]]"
    show_icon: false
    show_state: false
    tap_action:
      action: none
    state: !include ../states/state-car-charge.yaml
    styles: !include ../styles/style-card-car-graph.yaml
    custom_fields: !include ../graphs/car-charge-stats.yaml
  default: null

car-charge-option:
  card:
    type: "custom:button-card"
    entity: "[[entity]]"
    name: "[[type]]"
    icon: "[[icon]]"
    show_icon: true
    show_state: false
    show_name: false
    tap_action:
      action: none
    styles: !include ../styles/style-card-car-charge.yaml
    template: "[[template]]"
    variables:
      rate: "[[rate]]"
  default: null
